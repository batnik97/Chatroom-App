{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilreddy/Nimble Hackathon/ChatRoom/chatroom-app/client/src/ChatRoom.tsx\",\n  _s = $RefreshSig$();\n// ChatRoom.tsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Message from './Message';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatroom = () => {\n  _s();\n  var _location$state;\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const location = useLocation();\n  const username = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username;\n  const token = localStorage.getItem('token');\n  const [validToken, setValidToken] = useState(true);\n  const navigate = useNavigate();\n  const serverUrl = process.env.REACT_APP_SERVER_URL || 'http://127.0.0.1:5000';\n  useEffect(() => {\n    const fetchDataAndSetInterval = async () => {\n      try {\n        if (token) {\n          // Fetch message history\n          const response = await axios.get(`${serverUrl}/api/messages`, {\n            params: {\n              username: username\n            },\n            headers: {\n              Authorization: token\n            }\n          });\n          setMessages(response.data);\n\n          // Set up interval for fetching new messages\n          const fetchMessagesInterval = setInterval(async () => {\n            const newResponse = await axios.get(`${serverUrl}/api/messages`, {\n              params: {\n                username: username\n              },\n              headers: {\n                Authorization: token\n              }\n            });\n            setMessages(newResponse.data);\n          }, 5000); // Fetch messages every 5 seconds\n\n          // Clean up interval on component unmount\n          return () => clearInterval(fetchMessagesInterval);\n        }\n      } catch (error) {\n        console.error('Error fetching message history:', error);\n        setValidToken(false);\n      }\n    };\n    fetchDataAndSetInterval();\n  }, [username, token, serverUrl]);\n  const sendMessage = async () => {\n    try {\n      if (!messageInput.trim()) {\n        alert(\"Message can't be empty\");\n        return;\n      }\n      const response = await axios.post(`${serverUrl}/api/messages`, {\n        username: username,\n        content: messageInput\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setMessages([...messages, response.data]);\n      setMessageInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const handleVote = async (messageId, voteType, userVote) => {\n    try {\n      await axios.put(`${serverUrl}/api/messages/${messageId}`, {\n        voteType: voteType,\n        userVote: userVote\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const updatedMessages = messages.map(message => {\n        if (message._id === messageId) {\n          let upvoteInc = 0;\n          let downvoteInc = 0;\n          if (userVote === 'upvote') {\n            if (voteType === 'downvote') downvoteInc = 1;\n            upvoteInc = -1;\n          } else if (userVote === 'downvote') {\n            if (voteType === 'upvote') upvoteInc = 1;\n            downvoteInc = -1;\n          } else {\n            if (voteType === 'upvote') upvoteInc = 1;else downvoteInc = 1;\n          }\n          return {\n            ...message,\n            upvotes: message.upvotes + upvoteInc,\n            downvotes: message.downvotes + downvoteInc,\n            userVote: userVote === voteType ? 'none' : voteType\n          };\n        }\n        return message;\n      });\n      setMessages(updatedMessages);\n    } catch (error) {\n      console.error('Error voting on message:', error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  if (!token || !validToken) {\n    navigate('/login');\n    return null; // Add return null to prevent rendering before redirect\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chatroom-heading\",\n        children: \"Chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        onVote: handleVote\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatroom, \"Jwi6sW7fQE/gymU2jHT26P/n/wA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","axios","Message","useLocation","useNavigate","jsxDEV","_jsxDEV","Chatroom","_s","_location$state","messageInput","setMessageInput","messages","setMessages","location","username","state","token","localStorage","getItem","validToken","setValidToken","navigate","serverUrl","process","env","REACT_APP_SERVER_URL","fetchDataAndSetInterval","response","get","params","headers","Authorization","data","fetchMessagesInterval","setInterval","newResponse","clearInterval","error","console","sendMessage","trim","alert","post","content","handleVote","messageId","voteType","userVote","put","updatedMessages","map","message","_id","upvoteInc","downvoteInc","upvotes","downvotes","logout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onVote","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nikhilreddy/Nimble Hackathon/ChatRoom/chatroom-app/client/src/ChatRoom.tsx"],"sourcesContent":["// ChatRoom.tsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Message, { MessageProps } from './Message';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ChatRoom.css';\n\nconst Chatroom: React.FC = () => {\n  const [messageInput, setMessageInput] = useState('');\n  const [messages, setMessages] = useState<MessageProps[]>([]);\n  const location = useLocation();\n  const username = location.state?.username;\n  const token = localStorage.getItem('token');\n  const [validToken, setValidToken] = useState(true);\n  const navigate = useNavigate();\n  const serverUrl = process.env.REACT_APP_SERVER_URL || 'http://127.0.0.1:5000';\n\n  useEffect(() => {\n    const fetchDataAndSetInterval = async () => {\n      try {\n        if (token) {\n          // Fetch message history\n          const response = await axios.get(`${serverUrl}/api/messages`, {\n            params: { username: username },\n            headers: { Authorization: token },\n          });\n          setMessages(response.data);\n\n          // Set up interval for fetching new messages\n          const fetchMessagesInterval = setInterval(async () => {\n            const newResponse = await axios.get(`${serverUrl}/api/messages`, {\n              params: { username: username },\n              headers: { Authorization: token },\n            });\n            setMessages(newResponse.data);\n          }, 5000); // Fetch messages every 5 seconds\n\n          // Clean up interval on component unmount\n          return () => clearInterval(fetchMessagesInterval);\n        }\n      } catch (error) {\n        console.error('Error fetching message history:', error);\n        setValidToken(false);\n      }\n    };\n\n    fetchDataAndSetInterval();\n  }, [username, token, serverUrl]);\n\n  const sendMessage = async () => {\n    try {\n      if (!messageInput.trim()) {\n        alert(\"Message can't be empty\");\n        return;\n      }\n      const response = await axios.post(\n        `${serverUrl}/api/messages`,\n        { username: username, content: messageInput },\n        { headers: { Authorization: token } }\n      );\n      setMessages([...messages, response.data]);\n      setMessageInput('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const handleVote = async (messageId: string, voteType: 'upvote' | 'downvote', userVote: 'upvote' | 'downvote' | 'none') => {\n    try {\n      await axios.put(\n        `${serverUrl}/api/messages/${messageId}`,\n        { voteType: voteType, userVote: userVote },\n        { headers: { Authorization: token } }\n      );\n\n      const updatedMessages = messages.map((message: any) => {\n        if (message._id === messageId) {\n          let upvoteInc = 0;\n          let downvoteInc = 0;\n\n          if (userVote === 'upvote') {\n            if (voteType === 'downvote') downvoteInc = 1;\n            upvoteInc = -1;\n          } else if (userVote === 'downvote') {\n            if (voteType === 'upvote') upvoteInc = 1;\n            downvoteInc = -1;\n          } else {\n            if (voteType === 'upvote') upvoteInc = 1;\n            else downvoteInc = 1;\n          }\n\n          return {\n            ...message,\n            upvotes: message.upvotes + upvoteInc,\n            downvotes: message.downvotes + downvoteInc,\n            userVote: userVote === voteType ? 'none' : voteType,\n          };\n        }\n        return message;\n      });\n\n      setMessages(updatedMessages);\n    } catch (error) {\n      console.error('Error voting on message:', error);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  if (!token || !validToken) {\n    navigate('/login');\n    return null; // Add return null to prevent rendering before redirect\n  }\n\n  return (\n    <div className=\"chatroom-container\">\n      <div className=\"header\">\n        <h2 className=\"chatroom-heading\">Chatroom</h2>\n        <button className=\"logout-button\" onClick={logout}>\n          Logout\n        </button>\n      </div>\n      <div className=\"messages\">\n        {messages.map((message: any) => (\n          <Message key={message._id} message={message} onVote={handleVote} />\n        ))}\n      </div>\n      <div className=\"message-input\">\n        <input type=\"text\" value={messageInput} onChange={(e) => setMessageInput(e.target.value)} />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatroom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}