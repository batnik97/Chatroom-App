{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilreddy/Nimble Hackathon/ChatRoom/chatroom-app/frontend/src/Login.tsx\",\n  _s = $RefreshSig$();\n// Login.tsx\nimport React, { useState } from 'react';\nimport axios, { AxiosError } from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\n\n/**\n * Login component handles the user login functionality.\n * It allows users to input their username and password, authenticate them via API,\n * and redirect them to the chatroom upon successful login.\n *\n * @param {Function} setToken - Function to set the authentication token upon successful login.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setToken\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const serverUrl = process.env.REACT_APP_SERVER_URL || 'http://127.0.0.1:5000';\n\n  /**\n   * Handles the login process.\n   * Sends a request to the server with the provided username and password.\n   * If successful, sets the authentication token and redirects to the chatroom.\n   * Otherwise, displays an error message.\n   */\n  const handleLogin = async () => {\n    try {\n      // Check if username and password are not empty\n      if (!username.trim() || !password.trim()) {\n        alert('Username and Password can\\'t be empty');\n        return;\n      }\n      const response = await axios.post(`${serverUrl}/api/login`, {\n        username,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      navigate('/chatroom', {\n        state: {\n          username\n        }\n      });\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(error.response.data.message);\n        }\n      }\n      console.error('Error logging in:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"signup-btn\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","AxiosError","Link","useNavigate","jsxDEV","_jsxDEV","Login","setToken","_s","username","setUsername","password","setPassword","navigate","serverUrl","process","env","REACT_APP_SERVER_URL","handleLogin","trim","alert","response","post","access_token","data","localStorage","setItem","state","error","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["/Users/nikhilreddy/Nimble Hackathon/ChatRoom/chatroom-app/frontend/src/Login.tsx"],"sourcesContent":["// Login.tsx\nimport React, { useState } from 'react';\nimport axios, { AxiosError } from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\n\n/**\n * Login component handles the user login functionality.\n * It allows users to input their username and password, authenticate them via API,\n * and redirect them to the chatroom upon successful login.\n *\n * @param {Function} setToken - Function to set the authentication token upon successful login.\n */\nconst Login: React.FC<{ setToken: (token: string) => void }> = ({ setToken }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n  const serverUrl = process.env.REACT_APP_SERVER_URL || 'http://127.0.0.1:5000';\n\n  /**\n   * Handles the login process.\n   * Sends a request to the server with the provided username and password.\n   * If successful, sets the authentication token and redirects to the chatroom.\n   * Otherwise, displays an error message.\n   */\n  const handleLogin = async () => {\n    try {\n      // Check if username and password are not empty\n      if (!username.trim() || !password.trim()) {\n        alert('Username and Password can\\'t be empty');\n        return;\n      }\n      const response = await axios.post(`${serverUrl}/api/login`, { username, password });\n      const { access_token } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token); \n      navigate('/chatroom', { state: { username } });\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(error.response.data.message);\n        }\n      }\n      console.error('Error logging in:', error);\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <h2>Login</h2>\n      <div className=\"form-group\">\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div className=\"form-group\">\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </div>\n      <button className=\"signup-btn\" onClick={handleLogin}>Login</button>\n      <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}